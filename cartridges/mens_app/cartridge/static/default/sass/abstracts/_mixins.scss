// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop
$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop
ORDER: Base + typography > general layout + grid > page layout > components
1em = 16px
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
      @media only screen and (min-width: 37.5em) { @content };    //600px
  }
  @if $breakpoint == tab-port {
      @media only screen and (min-width: 56.25em) { @content };     //900px
  }
  @if $breakpoint == tab-land {
      @media only screen and (min-width: 75em) { @content };    //1200px
  }
  @if $breakpoint == big-desktop {
      @media only screen and (min-width: 112.5em) { @content };    //1800
  }
  @if $breakpoint == phone-max {
      @media only screen and (max-width: 37.5em) { @content };    //600px
  }
  @if $breakpoint == tab-port-max{
      @media only screen and (max-width: 56.25em) { @content };     //900px
  }
  @if $breakpoint == tab-land-max {
      @media only screen and (max-width: 75em) { @content };    //1200px
  }
  @if $breakpoint == big-desktop-max {
      @media only screen { @content };    //rest
  }
}

@mixin font-family-global {
  font-family: nth($text-font-stack, $avenir-LT-Std);
  font-style: $font-style;
}